<smooks-resource-list xmlns="http://www.milyn.org/xsd/smooks-1.1.xsd"
	xmlns:jb="http://www.milyn.org/xsd/smooks/javabean-1.2.xsd" xmlns:dao="http://www.milyn.org/xsd/smooks/persistence-1.2.xsd">

	<!--
		The inserter calls (via Scribe) the SessionDaoAdapter#insert() method
		at the visitAfter of the Order element. The SessioDaoAdapter#insert()
		uses the Hibernate Session#save() method to persist the entity to the
		database.
	-->
	<dao:inserter beanId="order" insertOnElement="order" />

	<!--
		This is a normal Javabean binding. It creates the order bean and binds
		data into it.
	-->
	<jb:bean beanId="order" class="example.entity.Order"
		createOnElement="order">

		<jb:value property="ordernumber" data="ordernumber" />
		<jb:value property="customerId" data="customer" />
		<jb:wiring setterMethod="addOrderLine" beanIdRef="orderLine" />
	</jb:bean>

	<!--
		This is a normal Javabean binding. Notice that we have a wiring on
		'product'. The Product entity will not be created, but looked up by a
		locator.
	-->
	<jb:bean beanId="orderLine" class="example.entity.OrderLine"
		createOnElement="order-item">

		<jb:value property="quantity" data="quantity" decoder="Integer" />
		<jb:wiring property="order" beanIdRef="order" />
		<jb:wiring property="product" beanIdRef="product" />
	</jb:bean>

	<!--
		This locator calls (via Scribe) the SessionDaoAdapter#lookupByQuery()
		method. The result will be added to the bean repository under the bean
		id 'product'. An exception is thrown when no result is found.
	-->
	<dao:locator beanId="product" lookupOnElement="order-item"
		onNoResult="EXCEPTION" uniqueResult="true">

		<dao:query>from Product p where p.id = :id</dao:query>
		<dao:params>
			<dao:value name="id" data="product" decoder="Integer" />
		</dao:params>
	</dao:locator>

</smooks-resource-list>