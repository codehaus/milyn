<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2008 rel. 2 sp1 (http://www.altova.com) by Bård Langöy (Diamo AB) -->
<xs:schema xmlns:mapping="http://www.milyn.org/schema/edi-message-mapping-1.0.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.milyn.org/schema/edi-message-mapping-1.0.xsd" elementFormDefault="qualified">
	<xs:element name="edimap">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="mapping:import" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>
							The definition element specifies the name (and sometimes the location) of the file contining the definition of segments in the edi-message-mapping.
						</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element ref="mapping:description"/>
				<xs:element ref="mapping:delimiters"/>
				<xs:element ref="mapping:segments"/>
			</xs:sequence>
		</xs:complexType>
		<xs:unique name="uniqueNamespaces">
			<xs:selector xpath="import"/>
			<xs:field xpath="@namespace"/>
		</xs:unique>
	</xs:element>
	<xs:element name="import">
		<xs:complexType>
			<xs:attribute name="name" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation>
A URI reference that specifies the name and location of external schema for use in this schema. 
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="namespace" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation>
A namespace is used in combination with URI specified in the name attribute. The namespace must have a unique value within the same schema.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="truncatableFields" type="xs:boolean" use="optional">
				<xs:annotation>
					<xs:documentation>
Specifies whether Fields in edi-definition should be truncatable. This setting overwrites
truncatable attribute for all Fields in edi-definition
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="truncatableComponents" type="xs:boolean" use="optional">
				<xs:annotation>
					<xs:documentation>
Specifies whether Components in edi-definition should be truncatable. This setting overwrites
truncatable attribute for all Components in edi-definition.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="description">
		<xs:complexType>
			<xs:attribute name="name" type="xs:string" use="required"/>
			<xs:attribute name="version" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="delimiters">
		<xs:complexType>
			<xs:attribute name="segment" type="xs:string" use="required"/>
			<xs:attribute name="field" type="xs:string" use="required"/>
			<xs:attribute name="component" type="xs:string" use="required"/>
			<xs:attribute name="sub-component" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation>
						The delimiter attributes mark the boundary
						tokens between the EDI message parts - segment,
						field, component and sub-component.

						These boundary tokens may contain special
						characters (non-printable). These are defined
						using XML character references e.g. LF =
						&quot;&amp;#10;&quot;
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="segments">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="mapping:mapping-node">
					<xs:sequence>
						<xs:element ref="mapping:segment" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="mapping-node">
		<xs:attribute name="xmltag" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:element name="segment">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="mapping:mapping-node">
					<xs:sequence>
						<xs:element ref="mapping:field" minOccurs="0" maxOccurs="unbounded"/>
						<xs:element ref="mapping:segment" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
					<xs:attribute name="minOccurs" type="xs:int" use="optional" default="1">
						<xs:annotation>
							<xs:documentation>
								The minimum number of times the segment must appear in this
								position within the EDI message.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="maxOccurs" type="xs:int" use="optional" default="1">
						<xs:annotation>
							<xs:documentation>
								The maximum number of times the segment must appear in this
								position within the EDI message.  For an unbounded max, set
								the maxOccurs value to -1.
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="segcode" type="xs:string" use="required"/>
					<xs:attribute name="segref" type="xs:string" use="optional"/>
					<xs:attribute name="truncatable" type="xs:boolean" use="optional" default="false"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="field">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="mapping:mapping-node">
					<xs:sequence>
						<xs:element ref="mapping:component" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
					<xs:attribute name="required" type="xs:boolean" use="optional" default="false"/>
					<xs:attribute name="truncatable" type="xs:boolean" use="optional" default="false"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="component">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="mapping:mapping-node">
					<xs:sequence>
						<xs:element ref="mapping:sub-component" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
					<xs:attribute name="required" type="xs:boolean" use="optional" default="false"/>
					<xs:attribute name="truncatable" type="xs:boolean" use="optional" default="false"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="sub-component">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="mapping:mapping-node">
					<xs:attribute name="required" type="xs:boolean" use="optional" default="false"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
</xs:schema>
