<?xml version="1.0"?>
<smooks-resource-list xmlns="http://www.milyn.org/xsd/smooks-1.0.xsd">

    <!--
    Configure the EDI Parser to parse the message stream into a stream of SAX events.
    -->
    <resource-config selector="org.xml.sax.driver">
	    <resource>org.milyn.smooks.edi.SmooksEDIParser</resource>
		<param name="mapping-model">/example/edi-to-xml-order-mapping.xml</param>
	</resource-config>


    <!--
    Create an "example.beans.Order" bean instance when we visit the start of the <order> element.
    Assign the new bean instance to the beanId of "order".
    -->
    <resource-config selector="order">
        <resource>org.milyn.javabean.ProcessingPhaseBeanPopulator</resource>
        <param name="beanId">order</param>
        <param name="beanClass">example.beans.Order</param>
    </resource-config>

    <!--
    Create an "example.beans.Header" bean instance when we visit the start of the <order> element.
    Note, we're creating this bean instance before we encounter the actual <header> element.
    Set the new bean instance on the "order" bean.
    -->
    <resource-config selector="order">
        <resource>org.milyn.javabean.ProcessingPhaseBeanPopulator</resource>
        <param name="beanClass">example.beans.Header</param>
        <param name="setOn">order</param>
        <param name="bindings">
            <!-- Header bindings... -->
            <binding property="orderId" selector="header order-id" />
            <binding property="orderStatus" type="Long" selector="header status-code" />
            <binding property="netAmount" type="BigDecimal" selector="header net-amount" />
            <binding property="totalAmount" type="BigDecimal" selector="header total-amount" />
            <binding property="tax" type="BigDecimal" selector="header tax" />
            <binding property="date" type="OrderDateLong" selector="header date" />
        </param>
    </resource-config>

    <!--
    Create an "example.beans.Customer" bean instance when we visit the start of the
    <customer-details> element. 
    Set the new bean instance on the "header" bean.
    -->
    <resource-config selector="customer-details">
        <resource>org.milyn.javabean.ProcessingPhaseBeanPopulator</resource>
        <param name="beanClass">example.beans.Customer</param>
        <param name="setOn">header</param>
        <param name="bindings">
            <!-- Customer bindings... -->
            <binding property="userName" selector="customer-details username" />
            <binding property="firstName" selector="customer-details name firstname" />
            <binding property="lastName" selector="customer-details name lastname" />
            <binding property="state" selector="customer-details state" />
        </param>
    </resource-config>

    <!--
    Create an "example.beans.OrderItem" bean instance when we visit the start of the <order-item> element.
    Add the OrderItem instances to a list (because there are potentially many of them on an order).
    Set the OrderItem list on the "order" bean.
    -->
    <resource-config selector="order-item">
        <resource>org.milyn.javabean.ProcessingPhaseBeanPopulator</resource>
        <param name="beanClass">example.beans.OrderItem</param>
        <param name="addToList">true</param>
        <param name="setOn">order</param>
        <param name="bindings">
            <!-- OrderItem bindings... -->
            <binding property="quantity" type="Integer" selector="order-item quantity" />
            <binding property="productId" type="String" selector="order-item product-id" />
            <binding property="price" type="BigDecimal" selector="order-item price" />
            <binding property="title" selector="order-item title" />
        </param>
    </resource-config>

    <!--
    Configure a special decoder for the <date> field of the <header> - to set the date format.
    -->
    <resource-config selector="decoder:OrderDateLong">
        <resource>org.milyn.javabean.decoders.DateDecoder</resource>
        <param name="format">EEE MMM dd HH:mm:ss z yyyy</param>
    </resource-config>

</smooks-resource-list>
